---
# To trigger a package release, create a new tag in the format v.x.x.x with semantic versioning
name: PyPi Package Release

on:
  push:
    tags:
      # Only run this workflow for tags that start with 'v.' (release tags)
      - 'v*'

jobs:
  smoke_test:
    runs-on: ubuntu-latest
    name: Smoke Test for python

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/requirements.txt
        pip install wheel twine pytest

    - name: Build the package
      run: |
        python setup.py sdist bdist_wheel

    - name: Smoke Test
      run: |
        pip install dist/*.whl
        aicodebot -V
        pytest

  pypi_release:
    needs: smoke_test
    runs-on: ubuntu-latest
    name: Publish to PyPi
    permissions:
      # Required for github actions to create a release
      contents: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: pip

    - name: Build the package
      run: |
        pip install wheel twine
        python setup.py sdist bdist_wheel

    - name: Publish to PyPi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine check dist/*
        twine upload dist/*

    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false